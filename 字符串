题目一：（字符串）如何在二维数组中寻找最短路径
方法一（递归）
def getMinPath(arr,i,j):
    if i==0 and j==0:
        return arr[i][j]
    elif i>0 and j>0:
        return arr[i][j]+min(getMinPath(arr,i-1,j),getMinPath(arr,i,j-1))
    elif i>0 and j==0:
        return arr[i][j]+getMinPath(arr,i-1,j)
    else:
        return arr[i][j]+getMinPath(arr,i,j-1)
def getMinPath2(arr):
    if arr==None or len(arr)==0:
        return 0
    return getMinPath(arr,len(arr)-1,len(arr[0])-1)
if __name__=="__main__":
    arr=[[1,4,3],[8,7,5],[2,1,5]]
    print(getMinPath2(arr))
方法二：动态规划：
def getMinPath(arr):
    if arr==None or len(arr)==0:
        return 0
    row=len(arr)
    col=len(arr[0])
    cache=[([None]*col) for i in range(row)]
    cache[0][0]=arr[0][0]
    i=1
    while i<col:
        cache[0][i]=cache[0][i-1]+arr[0][i]
        i+=1
    j=1
    while j<row:
        cache[j][0]=cache[j-1][0]+arr[j][0]
        j+=1
    print("路径：")
    i=1
    while i<row:
        j=1
        while j<col:
            if cache[i-1][j]>cache[i][j-1]:
                cache[i][j]=cache[i][j-1]+arr[i][j]
                print("["+str(i)+','+str(j-1)+"]",end=" ")
            else:
                cache[i][j]=cache[i-1][j]+arr[i][j]
                print("["+str(i-1)+','+str(j)+"]",end=" ")
            j+=1
        i+=1
    print("["+str(row-1)+','+str(col-1)+"]")
    return("最小值为："+str(cache[row-1][col-1]))
if __name__=="__main__":
    arr=[[1,2,3],[8,7,5],[2,1,5]]
    print(getMinPath(arr))
            
